{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/karnk/Desktop/ProCoders/OneSTOP/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/karnk/Desktop/ProCoders/OneSTOP/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:/Users/karnk/Desktop/ProCoders/OneSTOP/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/karnk/Desktop/ProCoders/OneSTOP/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Users/karnk/Desktop/ProCoders/OneSTOP/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/karnk/Desktop/ProCoders/OneSTOP/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\karnk\\\\Desktop\\\\ProCoders\\\\OneStop\\\\src\\\\components\\\\Upcoming\\\\Upcoming.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getUpcomingContest } from '../../api/clListApi';\nimport { updateUpcomingContestAction } from '../../store/reducers/UpcomingReducer';\nimport { FullScreenError, LoadingFadeIn } from '../Common/Common';\nimport UpcomingTable from './UpcomingTable';\n\nvar Upcoming = /*#__PURE__*/function (_Component) {\n  _inherits(Upcoming, _Component);\n\n  var _super = _createSuper(Upcoming);\n\n  function Upcoming(props) {\n    var _this;\n\n    _classCallCheck(this, Upcoming);\n\n    _this = _super.call(this, props);\n    _this.updateContestList = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var contestList, categories, categoryIdList, newContestList, updateUpcomingContestList;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              contestList = _this.props.contestList;\n              if (!contestList.length) _this.setState({\n                loading: true,\n                error: ''\n              });\n              categories = _this.state.categories;\n              categoryIdList = Object.keys(categories);\n              _context.next = 6;\n              return getUpcomingContest(categoryIdList);\n\n            case 6:\n              newContestList = _context.sent;\n\n              _this.setState({\n                loading: false\n              });\n\n              if (!contestList.length && !newContestList.length) _this.setState({\n                error: 'Something went wrong on our side.'\n              });\n\n              if (newContestList.length) {\n                updateUpcomingContestList = _this.props.updateUpcomingContestList;\n                updateUpcomingContestList(newContestList);\n              }\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    _this.handleChange = function (event) {\n      var name = event.target.name;\n      var categories = _this.state.categories;\n      categories[name].show = !categories[name].show;\n\n      _this.setState({\n        categories\n      });\n    };\n\n    _this.state = {\n      categories: {\n        93: {\n          name: 'AtCoder',\n          show: true\n        },\n        1: {\n          name: 'Codeforces',\n          show: true\n        },\n        2: {\n          name: 'Codechef',\n          show: true\n        },\n        63: {\n          name: 'Hackerrank',\n          show: true\n        },\n        102: {\n          name: 'Leetcode',\n          show: true\n        },\n        73: {\n          name: 'Hackerearth',\n          show: true\n        }\n      },\n      loading: false,\n      error: ''\n    };\n    return _this;\n  }\n\n  _createClass(Upcoming, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateContestList();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var categories = this.state.categories;\n      var contestList = this.props.contestList;\n      var _this$state = this.state,\n          loading = _this$state.loading,\n          error = _this$state.error;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: \"upcoming\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row mx-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-lg-2 col-md-3 py-3 px-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"sidebar px-3\",\n        style: {\n          fontSize: '1rem'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }\n      }, Object.keys(categories).map(function (category) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: category,\n          className: \"form-group form-check\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"input\", {\n          type: \"checkbox\",\n          className: \"form-check-input\",\n          checked: categories[category].show,\n          name: category,\n          onChange: _this2.handleChange,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 19\n          }\n        }), /*#__PURE__*/React.createElement(\"label\", {\n          className: \"form-check-label\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 19\n          }\n        }, categories[category].name));\n      }), /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-box border-left col-lg-10 col-md-9 px-1 px-md-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }\n      }, loading && /*#__PURE__*/React.createElement(LoadingFadeIn, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }\n      }), error && /*#__PURE__*/React.createElement(FullScreenError, {\n        message: error,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 23\n        }\n      }), !loading && !error && /*#__PURE__*/React.createElement(UpcomingTable, {\n        contestList: contestList,\n        filter: categories,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 36\n        }\n      }))));\n    }\n  }]);\n\n  return Upcoming;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    contestList: state.upcoming && state.upcoming.contestList || []\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(disptach) {\n  return {\n    updateUpcomingContestList: function updateUpcomingContestList(contestList) {\n      return disptach(updateUpcomingContestAction(contestList));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Upcoming);","map":{"version":3,"sources":["C:/Users/karnk/Desktop/ProCoders/OneStop/src/components/Upcoming/Upcoming.js"],"names":["React","Component","connect","getUpcomingContest","updateUpcomingContestAction","FullScreenError","LoadingFadeIn","UpcomingTable","Upcoming","props","updateContestList","contestList","length","setState","loading","error","categories","state","categoryIdList","Object","keys","newContestList","updateUpcomingContestList","handleChange","event","name","target","show","fontSize","map","category","mapStateToProps","upcoming","mapDispatchToProps","disptach"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getUpcomingContest } from '../../api/clListApi';\r\nimport { updateUpcomingContestAction } from '../../store/reducers/UpcomingReducer';\r\nimport { FullScreenError, LoadingFadeIn } from '../Common/Common';\r\nimport UpcomingTable from './UpcomingTable';\r\n\r\nclass Upcoming extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      categories: {\r\n        93: { name: 'AtCoder', show: true },\r\n        1: { name: 'Codeforces', show: true },\r\n        2: { name: 'Codechef', show: true },\r\n        63: { name: 'Hackerrank', show: true },\r\n        102: { name: 'Leetcode', show: true },\r\n        73: { name: 'Hackerearth', show: true },\r\n      },\r\n      loading: false,\r\n      error: '',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateContestList();\r\n  }\r\n\r\n  updateContestList = async () => {\r\n    const { contestList } = this.props;\r\n    if (!contestList.length) this.setState({ loading: true, error: '' });\r\n\r\n    const { categories } = this.state;\r\n    const categoryIdList = Object.keys(categories);\r\n    const newContestList = await getUpcomingContest(categoryIdList);\r\n    this.setState({ loading: false });\r\n\r\n    if (!contestList.length && !newContestList.length) this.setState({ error: 'Something went wrong on our side.' });\r\n    if (newContestList.length) {\r\n      const { updateUpcomingContestList } = this.props;\r\n      updateUpcomingContestList(newContestList);\r\n    }\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    const { name } = event.target;\r\n    const { categories } = this.state;\r\n    categories[name].show = !categories[name].show;\r\n    this.setState({ categories });\r\n  };\r\n\r\n  render() {\r\n    const { categories } = this.state;\r\n    const { contestList } = this.props;\r\n    const { loading, error } = this.state;\r\n    return (\r\n      <div id=\"upcoming\">\r\n        <div className=\"row mx-0\">\r\n          <div className=\"col-lg-2 col-md-3 py-3 px-0\">\r\n            <div className=\"sidebar px-3\" style={{ fontSize: '1rem' }}>\r\n              {Object.keys(categories).map((category) => (\r\n                <div key={category} className=\"form-group form-check\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    className=\"form-check-input\"\r\n                    checked={categories[category].show}\r\n                    name={category}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                  <label className=\"form-check-label\">{categories[category].name}</label>\r\n                </div>\r\n              ))}\r\n              <hr />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"content-box border-left col-lg-10 col-md-9 px-1 px-md-2\">\r\n            {loading && <LoadingFadeIn />}\r\n            {error && <FullScreenError message={error} />}\r\n            {!loading && !error && <UpcomingTable contestList={contestList} filter={categories} />}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contestList: (state.upcoming && state.upcoming.contestList) || [],\r\n});\r\n\r\nconst mapDispatchToProps = (disptach) => ({\r\n  updateUpcomingContestList: (contestList) => disptach(updateUpcomingContestAction(contestList)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Upcoming);\r\n"]},"metadata":{},"sourceType":"module"}