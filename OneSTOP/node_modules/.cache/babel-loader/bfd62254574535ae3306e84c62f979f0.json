{"ast":null,"code":"import _objectSpread from \"C:/Users/karnk/Desktop/ProCoders/OneSTOP/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _require = require('../../api/data/companyQuestions'),\n    companyQuestions = _require.companyQuestions,\n    companyCategories = _require.companyCategories;\n\nvar LOCAL_COMPANY_USER_DATA = ' LOCAL_COMPANY_USER_DATA';\nvar LOCAL_COMPANY_FILTERS = 'LOCAL_COMPANY_FILTERS';\nvar UPDATE_COMPANY_FILTERS = 'UPDATE_COMPANY_FILTERS';\nvar UPDATE_COMPANY_USER_DATA = 'UPDATE_COMPANY_USER_DATA';\nvar CLEAR_COMPANY_USER_DATA = 'CLEAR_COMPANY_USER_DATA'; // let a = [];\n// companyQuestions.forEach((item) => (a = [...a, ...item.tags]));\n// a = [...new Set(a)];\n// a.sort();\n// console.log(JSON.stringify(a));\n\nexport var updateCompanyFiltersAction = function updateCompanyFiltersAction(filters) {\n  return {\n    type: UPDATE_COMPANY_FILTERS,\n    payload: filters\n  };\n};\nexport var updateCompanyUserDataAction = function updateCompanyUserDataAction(userData) {\n  return {\n    type: UPDATE_COMPANY_USER_DATA,\n    payload: userData\n  };\n};\nexport var clearCompanyUserDataAction = function clearCompanyUserDataAction() {\n  return {\n    type: CLEAR_COMPANY_USER_DATA\n  };\n};\nvar initialState = {\n  problems: companyQuestions,\n  categories: companyCategories,\n  userData: JSON.parse(localStorage.getItem(LOCAL_COMPANY_USER_DATA) || '{}'),\n  filters: JSON.parse(localStorage.getItem(LOCAL_COMPANY_FILTERS) || '{}')\n};\nexport var CompanyReducer = function CompanyReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case UPDATE_COMPANY_FILTERS:\n      {\n        localStorage.setItem(LOCAL_COMPANY_FILTERS, JSON.stringify(action.payload));\n        return _objectSpread(_objectSpread({}, state), {}, {\n          filters: action.payload\n        });\n      }\n\n    case UPDATE_COMPANY_USER_DATA:\n      {\n        localStorage.setItem(LOCAL_COMPANY_USER_DATA, JSON.stringify(action.payload));\n        return _objectSpread(_objectSpread({}, state), {}, {\n          userData: action.payload\n        });\n      }\n\n    case CLEAR_COMPANY_USER_DATA:\n      {\n        localStorage.removeItem(LOCAL_COMPANY_USER_DATA);\n        return _objectSpread(_objectSpread({}, state), {}, {\n          userData: {}\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n_c = CompanyReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CompanyReducer\");","map":{"version":3,"sources":["C:/Users/karnk/Desktop/ProCoders/OneStop/src/store/reducers/CompanyReducer.js"],"names":["require","companyQuestions","companyCategories","LOCAL_COMPANY_USER_DATA","LOCAL_COMPANY_FILTERS","UPDATE_COMPANY_FILTERS","UPDATE_COMPANY_USER_DATA","CLEAR_COMPANY_USER_DATA","updateCompanyFiltersAction","filters","type","payload","updateCompanyUserDataAction","userData","clearCompanyUserDataAction","initialState","problems","categories","JSON","parse","localStorage","getItem","CompanyReducer","state","action","setItem","stringify","removeItem"],"mappings":";;eAAgDA,OAAO,CAAC,iCAAD,C;IAA/CC,gB,YAAAA,gB;IAAkBC,iB,YAAAA,iB;;AAE1B,IAAMC,uBAAuB,GAAG,0BAAhC;AACA,IAAMC,qBAAqB,GAAG,uBAA9B;AAEA,IAAMC,sBAAsB,GAAG,wBAA/B;AACA,IAAMC,wBAAwB,GAAG,0BAAjC;AACA,IAAMC,uBAAuB,GAAG,yBAAhC,C,CAEA;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAMC,0BAA0B,GAAG,SAA7BA,0BAA6B,CAACC,OAAD,EAAa;AACrD,SAAO;AACLC,IAAAA,IAAI,EAAEL,sBADD;AAELM,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMG,2BAA2B,GAAG,SAA9BA,2BAA8B,CAACC,QAAD,EAAc;AACvD,SAAO;AACLH,IAAAA,IAAI,EAAEJ,wBADD;AAELK,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMC,0BAA0B,GAAG,SAA7BA,0BAA6B,GAAM;AAC9C,SAAO;AACLJ,IAAAA,IAAI,EAAEH;AADD,GAAP;AAGD,CAJM;AAMP,IAAMQ,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAEf,gBADS;AAEnBgB,EAAAA,UAAU,EAAEf,iBAFO;AAGnBW,EAAAA,QAAQ,EAAEK,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBlB,uBAArB,KAAiD,IAA5D,CAHS;AAInBM,EAAAA,OAAO,EAAES,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBjB,qBAArB,KAA+C,IAA1D;AAJU,CAArB;AAOA,OAAO,IAAMkB,cAAc,GAAG,SAAjBA,cAAiB,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBR,YAAyB;AAAA,MAAXS,MAAW;;AAC9D,UAAQA,MAAM,CAACd,IAAf;AACE,SAAKL,sBAAL;AAA6B;AAC3Be,QAAAA,YAAY,CAACK,OAAb,CAAqBrB,qBAArB,EAA4Cc,IAAI,CAACQ,SAAL,CAAeF,MAAM,CAACb,OAAtB,CAA5C;AACA,+CAAYY,KAAZ;AAAmBd,UAAAA,OAAO,EAAEe,MAAM,CAACb;AAAnC;AACD;;AAED,SAAKL,wBAAL;AAA+B;AAC7Bc,QAAAA,YAAY,CAACK,OAAb,CAAqBtB,uBAArB,EAA8Ce,IAAI,CAACQ,SAAL,CAAeF,MAAM,CAACb,OAAtB,CAA9C;AACA,+CAAYY,KAAZ;AAAmBV,UAAAA,QAAQ,EAAEW,MAAM,CAACb;AAApC;AACD;;AAED,SAAKJ,uBAAL;AAA8B;AAC5Ba,QAAAA,YAAY,CAACO,UAAb,CAAwBxB,uBAAxB;AACA,+CAAYoB,KAAZ;AAAmBV,UAAAA,QAAQ,EAAE;AAA7B;AACD;;AAED;AACE,aAAOU,KAAP;AAjBJ;AAmBD,CApBM;KAAMD,c","sourcesContent":["const { companyQuestions, companyCategories } = require('../../api/data/companyQuestions');\r\n\r\nconst LOCAL_COMPANY_USER_DATA = ' LOCAL_COMPANY_USER_DATA';\r\nconst LOCAL_COMPANY_FILTERS = 'LOCAL_COMPANY_FILTERS';\r\n\r\nconst UPDATE_COMPANY_FILTERS = 'UPDATE_COMPANY_FILTERS';\r\nconst UPDATE_COMPANY_USER_DATA = 'UPDATE_COMPANY_USER_DATA';\r\nconst CLEAR_COMPANY_USER_DATA = 'CLEAR_COMPANY_USER_DATA';\r\n\r\n// let a = [];\r\n// companyQuestions.forEach((item) => (a = [...a, ...item.tags]));\r\n// a = [...new Set(a)];\r\n// a.sort();\r\n// console.log(JSON.stringify(a));\r\n\r\nexport const updateCompanyFiltersAction = (filters) => {\r\n  return {\r\n    type: UPDATE_COMPANY_FILTERS,\r\n    payload: filters,\r\n  };\r\n};\r\n\r\nexport const updateCompanyUserDataAction = (userData) => {\r\n  return {\r\n    type: UPDATE_COMPANY_USER_DATA,\r\n    payload: userData,\r\n  };\r\n};\r\n\r\nexport const clearCompanyUserDataAction = () => {\r\n  return {\r\n    type: CLEAR_COMPANY_USER_DATA,\r\n  };\r\n};\r\n\r\nconst initialState = {\r\n  problems: companyQuestions,\r\n  categories: companyCategories,\r\n  userData: JSON.parse(localStorage.getItem(LOCAL_COMPANY_USER_DATA) || '{}'),\r\n  filters: JSON.parse(localStorage.getItem(LOCAL_COMPANY_FILTERS) || '{}'),\r\n};\r\n\r\nexport const CompanyReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_COMPANY_FILTERS: {\r\n      localStorage.setItem(LOCAL_COMPANY_FILTERS, JSON.stringify(action.payload));\r\n      return { ...state, filters: action.payload };\r\n    }\r\n\r\n    case UPDATE_COMPANY_USER_DATA: {\r\n      localStorage.setItem(LOCAL_COMPANY_USER_DATA, JSON.stringify(action.payload));\r\n      return { ...state, userData: action.payload };\r\n    }\r\n\r\n    case CLEAR_COMPANY_USER_DATA: {\r\n      localStorage.removeItem(LOCAL_COMPANY_USER_DATA);\r\n      return { ...state, userData: {} };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}