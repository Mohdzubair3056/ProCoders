{"ast":null,"code":"import _objectSpread from \"C:/Users/karnk/Desktop/ProCoders/OneSTOP/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"C:/Users/karnk/Desktop/ProCoders/OneSTOP/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { globalSolutions } from '../../api/data/cfProblemsSolutions';\nimport { problemsCategories } from '../../api/data/ProblemsData';\nvar LOCAL_PROBLEMS_FILTERS = 'LOCAL_PROBLEMS_FILTERS';\nvar LOCAL_PROBLEMS = 'LOCAL_PROBLEMS';\nvar UPDATE_PROBLEMS_FILTERS = 'UPDATE_PROBLEMS_FILTERS';\nvar UPDATE_PROBLEMS = 'UPDATE_PROBLEMS';\nexport var updateProblemsFiltersAction = function updateProblemsFiltersAction(filters) {\n  return {\n    type: UPDATE_PROBLEMS_FILTERS,\n    payload: filters\n  };\n};\nexport var updateProblemsAction = function updateProblemsAction(problems) {\n  return {\n    type: UPDATE_PROBLEMS,\n    payload: problems\n  };\n};\nvar initialState = {\n  problems: JSON.parse(localStorage.getItem(LOCAL_PROBLEMS) || '[]'),\n  filters: JSON.parse(localStorage.getItem(LOCAL_PROBLEMS_FILTERS) || '{}'),\n  categories: problemsCategories,\n  globalSolutions\n};\nexport var ProblemsReducer = function ProblemsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case UPDATE_PROBLEMS:\n      {\n        var categories = new Set();\n        var problems = action.payload;\n        problems.forEach(function (problem) {\n          var tags = problem.tags;\n          tags.forEach(function (tag) {\n            return categories.add(tag);\n          });\n        });\n        categories = _toConsumableArray(categories).sort();\n        localStorage.setItem(LOCAL_PROBLEMS, JSON.stringify(problems));\n        return _objectSpread(_objectSpread({}, state), {}, {\n          problems,\n          categories\n        });\n      }\n\n    case UPDATE_PROBLEMS_FILTERS:\n      {\n        localStorage.setItem(LOCAL_PROBLEMS_FILTERS, JSON.stringify(action.payload));\n        return _objectSpread(_objectSpread({}, state), {}, {\n          filters: action.payload\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n_c = ProblemsReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProblemsReducer\");","map":{"version":3,"sources":["C:/Users/karnk/Desktop/ProCoders/OneStop/src/store/reducers/ProblemsReducer.js"],"names":["globalSolutions","problemsCategories","LOCAL_PROBLEMS_FILTERS","LOCAL_PROBLEMS","UPDATE_PROBLEMS_FILTERS","UPDATE_PROBLEMS","updateProblemsFiltersAction","filters","type","payload","updateProblemsAction","problems","initialState","JSON","parse","localStorage","getItem","categories","ProblemsReducer","state","action","Set","forEach","problem","tags","tag","add","sort","setItem","stringify"],"mappings":";;AAAA,SAASA,eAAT,QAAgC,oCAAhC;AACA,SAASC,kBAAT,QAAmC,6BAAnC;AAEA,IAAMC,sBAAsB,GAAG,wBAA/B;AACA,IAAMC,cAAc,GAAG,gBAAvB;AAEA,IAAMC,uBAAuB,GAAG,yBAAhC;AACA,IAAMC,eAAe,GAAG,iBAAxB;AAEA,OAAO,IAAMC,2BAA2B,GAAG,SAA9BA,2BAA8B,CAACC,OAAD,EAAa;AACtD,SAAO;AACLC,IAAAA,IAAI,EAAEJ,uBADD;AAELK,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMG,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,QAAD,EAAc;AAChD,SAAO;AACLH,IAAAA,IAAI,EAAEH,eADD;AAELI,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID,CALM;AAOP,IAAMC,YAAY,GAAG;AACnBD,EAAAA,QAAQ,EAAEE,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBb,cAArB,KAAwC,IAAnD,CADS;AAEnBI,EAAAA,OAAO,EAAEM,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBd,sBAArB,KAAgD,IAA3D,CAFU;AAGnBe,EAAAA,UAAU,EAAEhB,kBAHO;AAInBD,EAAAA;AAJmB,CAArB;AAOA,OAAO,IAAMkB,eAAe,GAAG,SAAlBA,eAAkB,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBP,YAAyB;AAAA,MAAXQ,MAAW;;AAC/D,UAAQA,MAAM,CAACZ,IAAf;AACE,SAAKH,eAAL;AAAsB;AACpB,YAAIY,UAAU,GAAG,IAAII,GAAJ,EAAjB;AACA,YAAMV,QAAQ,GAAGS,MAAM,CAACX,OAAxB;AACAE,QAAAA,QAAQ,CAACW,OAAT,CAAiB,UAACC,OAAD,EAAa;AAAA,cACpBC,IADoB,GACXD,OADW,CACpBC,IADoB;AAE5BA,UAAAA,IAAI,CAACF,OAAL,CAAa,UAACG,GAAD;AAAA,mBAASR,UAAU,CAACS,GAAX,CAAeD,GAAf,CAAT;AAAA,WAAb;AACD,SAHD;AAIAR,QAAAA,UAAU,GAAG,mBAAIA,UAAJ,EAAgBU,IAAhB,EAAb;AACAZ,QAAAA,YAAY,CAACa,OAAb,CAAqBzB,cAArB,EAAqCU,IAAI,CAACgB,SAAL,CAAelB,QAAf,CAArC;AACA,+CAAYQ,KAAZ;AAAmBR,UAAAA,QAAnB;AAA6BM,UAAAA;AAA7B;AACD;;AAED,SAAKb,uBAAL;AAA8B;AAC5BW,QAAAA,YAAY,CAACa,OAAb,CAAqB1B,sBAArB,EAA6CW,IAAI,CAACgB,SAAL,CAAeT,MAAM,CAACX,OAAtB,CAA7C;AACA,+CAAYU,KAAZ;AAAmBZ,UAAAA,OAAO,EAAEa,MAAM,CAACX;AAAnC;AACD;;AAED;AACE,aAAOU,KAAP;AAnBJ;AAqBD,CAtBM;KAAMD,e","sourcesContent":["import { globalSolutions } from '../../api/data/cfProblemsSolutions';\r\nimport { problemsCategories } from '../../api/data/ProblemsData';\r\n\r\nconst LOCAL_PROBLEMS_FILTERS = 'LOCAL_PROBLEMS_FILTERS';\r\nconst LOCAL_PROBLEMS = 'LOCAL_PROBLEMS';\r\n\r\nconst UPDATE_PROBLEMS_FILTERS = 'UPDATE_PROBLEMS_FILTERS';\r\nconst UPDATE_PROBLEMS = 'UPDATE_PROBLEMS';\r\n\r\nexport const updateProblemsFiltersAction = (filters) => {\r\n  return {\r\n    type: UPDATE_PROBLEMS_FILTERS,\r\n    payload: filters,\r\n  };\r\n};\r\n\r\nexport const updateProblemsAction = (problems) => {\r\n  return {\r\n    type: UPDATE_PROBLEMS,\r\n    payload: problems,\r\n  };\r\n};\r\n\r\nconst initialState = {\r\n  problems: JSON.parse(localStorage.getItem(LOCAL_PROBLEMS) || '[]'),\r\n  filters: JSON.parse(localStorage.getItem(LOCAL_PROBLEMS_FILTERS) || '{}'),\r\n  categories: problemsCategories,\r\n  globalSolutions,\r\n};\r\n\r\nexport const ProblemsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_PROBLEMS: {\r\n      let categories = new Set();\r\n      const problems = action.payload;\r\n      problems.forEach((problem) => {\r\n        const { tags } = problem;\r\n        tags.forEach((tag) => categories.add(tag));\r\n      });\r\n      categories = [...categories].sort();\r\n      localStorage.setItem(LOCAL_PROBLEMS, JSON.stringify(problems));\r\n      return { ...state, problems, categories };\r\n    }\r\n\r\n    case UPDATE_PROBLEMS_FILTERS: {\r\n      localStorage.setItem(LOCAL_PROBLEMS_FILTERS, JSON.stringify(action.payload));\r\n      return { ...state, filters: action.payload };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}