{"ast":null,"code":"import _objectSpread from \"C:/Users/karnk/Desktop/ProCoders/OneSTOP/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar LOCAL_CC_CONTEST_LIST = ' LOCAL_CC_CONTEST_LIST';\nvar LOCAL_CC_FILTERS = 'LOCAL_CC_FILTERS';\nvar UPDATE_CC_CONTEST_LIST = 'UPDATE_CC_CONTEST_LIST';\nvar UPDATE_CC_FILTERS = 'UPDATE_CC_FILTERS';\nexport var updateCodeChefContestListAction = function updateCodeChefContestListAction(ccContestList) {\n  return {\n    type: UPDATE_CC_CONTEST_LIST,\n    payload: ccContestList\n  };\n};\nexport var updateCodeChefFiltersAction = function updateCodeChefFiltersAction(ccFilters) {\n  return {\n    type: UPDATE_CC_FILTERS,\n    payload: ccFilters\n  };\n};\nvar ccCategories = {\n  LongChallenge: {\n    name: 'Long Challenge',\n    search: 'Challenge'\n  },\n  LunchTime: {\n    name: 'Lunch Time',\n    search: 'Lunchtime'\n  },\n  CookOff: {\n    name: 'Cook Off',\n    search: 'Cook-off'\n  },\n  ICPC: {\n    name: 'ICPC',\n    search: 'ICPC'\n  }\n};\nvar initialState = {\n  ccContestList: JSON.parse(localStorage.getItem(LOCAL_CC_CONTEST_LIST) || '[]'),\n  ccFilters: JSON.parse(localStorage.getItem(LOCAL_CC_FILTERS) || '{}'),\n  ccCategories\n};\nexport var CCReducer = function CCReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case UPDATE_CC_CONTEST_LIST:\n      {\n        localStorage.setItem(LOCAL_CC_CONTEST_LIST, JSON.stringify(action.payload));\n        return _objectSpread(_objectSpread({}, state), {}, {\n          ccContestList: action.payload\n        });\n      }\n\n    case UPDATE_CC_FILTERS:\n      {\n        localStorage.setItem(LOCAL_CC_FILTERS, JSON.stringify(action.payload));\n        return _objectSpread(_objectSpread({}, state), {}, {\n          ccFilters: action.payload\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n_c = CCReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CCReducer\");","map":{"version":3,"sources":["C:/Users/karnk/Desktop/ProCoders/OneStop/src/store/reducers/CCReducer.js"],"names":["LOCAL_CC_CONTEST_LIST","LOCAL_CC_FILTERS","UPDATE_CC_CONTEST_LIST","UPDATE_CC_FILTERS","updateCodeChefContestListAction","ccContestList","type","payload","updateCodeChefFiltersAction","ccFilters","ccCategories","LongChallenge","name","search","LunchTime","CookOff","ICPC","initialState","JSON","parse","localStorage","getItem","CCReducer","state","action","setItem","stringify"],"mappings":";AAAA,IAAMA,qBAAqB,GAAG,wBAA9B;AACA,IAAMC,gBAAgB,GAAG,kBAAzB;AAEA,IAAMC,sBAAsB,GAAG,wBAA/B;AACA,IAAMC,iBAAiB,GAAG,mBAA1B;AAEA,OAAO,IAAMC,+BAA+B,GAAG,SAAlCA,+BAAkC,CAACC,aAAD,EAAmB;AAChE,SAAO;AACLC,IAAAA,IAAI,EAAEJ,sBADD;AAELK,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMG,2BAA2B,GAAG,SAA9BA,2BAA8B,CAACC,SAAD,EAAe;AACxD,SAAO;AACLH,IAAAA,IAAI,EAAEH,iBADD;AAELI,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID,CALM;AAOP,IAAMC,YAAY,GAAG;AACnBC,EAAAA,aAAa,EAAE;AAAEC,IAAAA,IAAI,EAAE,gBAAR;AAA0BC,IAAAA,MAAM,EAAE;AAAlC,GADI;AAEnBC,EAAAA,SAAS,EAAE;AAAEF,IAAAA,IAAI,EAAE,YAAR;AAAsBC,IAAAA,MAAM,EAAE;AAA9B,GAFQ;AAGnBE,EAAAA,OAAO,EAAE;AAAEH,IAAAA,IAAI,EAAE,UAAR;AAAoBC,IAAAA,MAAM,EAAE;AAA5B,GAHU;AAInBG,EAAAA,IAAI,EAAE;AAAEJ,IAAAA,IAAI,EAAE,MAAR;AAAgBC,IAAAA,MAAM,EAAE;AAAxB;AAJa,CAArB;AAOA,IAAMI,YAAY,GAAG;AACnBZ,EAAAA,aAAa,EAAEa,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBrB,qBAArB,KAA+C,IAA1D,CADI;AAEnBS,EAAAA,SAAS,EAAES,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBpB,gBAArB,KAA0C,IAArD,CAFQ;AAGnBS,EAAAA;AAHmB,CAArB;AAMA,OAAO,IAAMY,SAAS,GAAG,SAAZA,SAAY,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBN,YAAyB;AAAA,MAAXO,MAAW;;AACzD,UAAQA,MAAM,CAAClB,IAAf;AACE,SAAKJ,sBAAL;AAA6B;AAC3BkB,QAAAA,YAAY,CAACK,OAAb,CAAqBzB,qBAArB,EAA4CkB,IAAI,CAACQ,SAAL,CAAeF,MAAM,CAACjB,OAAtB,CAA5C;AACA,+CAAYgB,KAAZ;AAAmBlB,UAAAA,aAAa,EAAEmB,MAAM,CAACjB;AAAzC;AACD;;AAED,SAAKJ,iBAAL;AAAwB;AACtBiB,QAAAA,YAAY,CAACK,OAAb,CAAqBxB,gBAArB,EAAuCiB,IAAI,CAACQ,SAAL,CAAeF,MAAM,CAACjB,OAAtB,CAAvC;AACA,+CAAYgB,KAAZ;AAAmBd,UAAAA,SAAS,EAAEe,MAAM,CAACjB;AAArC;AACD;;AAED;AACE,aAAOgB,KAAP;AAZJ;AAcD,CAfM;KAAMD,S","sourcesContent":["const LOCAL_CC_CONTEST_LIST = ' LOCAL_CC_CONTEST_LIST';\r\nconst LOCAL_CC_FILTERS = 'LOCAL_CC_FILTERS';\r\n\r\nconst UPDATE_CC_CONTEST_LIST = 'UPDATE_CC_CONTEST_LIST';\r\nconst UPDATE_CC_FILTERS = 'UPDATE_CC_FILTERS';\r\n\r\nexport const updateCodeChefContestListAction = (ccContestList) => {\r\n  return {\r\n    type: UPDATE_CC_CONTEST_LIST,\r\n    payload: ccContestList,\r\n  };\r\n};\r\n\r\nexport const updateCodeChefFiltersAction = (ccFilters) => {\r\n  return {\r\n    type: UPDATE_CC_FILTERS,\r\n    payload: ccFilters,\r\n  };\r\n};\r\n\r\nconst ccCategories = {\r\n  LongChallenge: { name: 'Long Challenge', search: 'Challenge' },\r\n  LunchTime: { name: 'Lunch Time', search: 'Lunchtime' },\r\n  CookOff: { name: 'Cook Off', search: 'Cook-off' },\r\n  ICPC: { name: 'ICPC', search: 'ICPC' },\r\n};\r\n\r\nconst initialState = {\r\n  ccContestList: JSON.parse(localStorage.getItem(LOCAL_CC_CONTEST_LIST) || '[]'),\r\n  ccFilters: JSON.parse(localStorage.getItem(LOCAL_CC_FILTERS) || '{}'),\r\n  ccCategories,\r\n};\r\n\r\nexport const CCReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_CC_CONTEST_LIST: {\r\n      localStorage.setItem(LOCAL_CC_CONTEST_LIST, JSON.stringify(action.payload));\r\n      return { ...state, ccContestList: action.payload };\r\n    }\r\n\r\n    case UPDATE_CC_FILTERS: {\r\n      localStorage.setItem(LOCAL_CC_FILTERS, JSON.stringify(action.payload));\r\n      return { ...state, ccFilters: action.payload };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}